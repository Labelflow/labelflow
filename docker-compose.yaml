version: "3.5"
services:
  db:
    image: postgres:12.6
    environment:
      POSTGRES_USER: ${POSTGRES_ADMIN_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_ADMIN_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-labelflow}
    ports:
      - "5432:5432"
    volumes:
      - "db:/var/lib/postgresql/data"

  db_migrate:
    build:
      context: .
      dockerfile: ./typescript/web/Dockerfile
      target: db-migrate
    environment:
      POSTGRES_EXTERNAL_URL: "postgresql://${POSTGRES_ADMIN_USER:-admin}:${POSTGRES_ADMIN_PASSWORD:-admin}@db:5432/${POSTGRES_DB:-labelflow}?schema=public&connect_timeout=300"
    depends_on:
      - db

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - "minio:/data"
    entrypoint: sh
    # create a labelflow folder in minio to create a bucket named accordingly
    command: -c 'mkdir -p /data/labelflow && /usr/bin/docker-entrypoint.sh server /data --console-address ":9001"'

  iog:
    container_name: iog
    restart: always
    build:
      context: ./python/iog
      dockerfile: Dockerfile
      target: local-dev
    # runtime: nvidia
    volumes:
      - "./python/iog/data/IOG_PASCAL_SBD_REFINEMENT.pth:/app/data/IOG_PASCAL_SBD_REFINEMENT.pth:ro"
    command: python server.py
    ports:
      - "5001:5000"
    depends_on:
      - minio

  web:
    build:
      context: .
      dockerfile: ./typescript/web/Dockerfile
      target: local-dev
      args:
        NEXT_PUBLIC_VERCEL_URL: http://localhost:3000
        NEXT_PUBLIC_IOG_API_ENDPOINT: http://localhost:5001/graphql
    ports:
      - "3000:3000"
    environment:
      VERCEL_URL: http://localhost:3000
      POSTGRES_EXTERNAL_URL: "postgresql://${POSTGRES_ADMIN_USER:-admin}:${POSTGRES_ADMIN_PASSWORD:-admin}@db:5432/${POSTGRES_DB:-labelflow}?schema=public&connect_timeout=300"
      LABELFLOW_AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER:-minioadmin}
      LABELFLOW_AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      LABELFLOW_AWS_REGION: ${LABELFLOW_AWS_REGION:-eu-west-1}
      LABELFLOW_AWS_ENDPOINT: ${LABELFLOW_AWS_ENDPOINT:-http://localhost:9000}
      JWT_SECRET: ${JWT_SECRET:-9W3LaNVnxT9UOaPWZHIyrAVu3ndIbBsLme3Ttq+WNoQ=}
      EMAIL_SERVER: ${EMAIL_SERVER:-}
      EMAIL_FROM: "LabelFlow <contact@labelflow.ai>"
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-}
      KEYCLOAK_ID: ${KEYCLOAK_ID:-labelflow}
      KEYCLOAK_SECRET: ${KEYCLOAK_SECRET:-3jKWDZxOoFa5bVNQJZXyEDGmC6NhoLFc}
      KEYCLOAK_ISSUER: ${KEYCLOAK_ISSUER:-http://localhost:8080/auth/realms/LabelFlow}
    volumes:
      - "./docker-compose.dev.nginx:/etc/nginx/sites-enabled/localhost-proxy.nginx:ro"
    depends_on:
      - db
      - db_migrate
      - minio
      - iog
      - keycloak

  keycloak:
    image: jboss/keycloak:16.1.1
    # Keycloak images are not compatible with Apple M1 chips yet
    build: docker/keycloak-containers/server
    # Subdirectries of git repositories are not supported by docker-compose yet
    # build: https://github.com/keycloak/keycloak-containers.git#16.1.1#:server
    # https://github.com/docker/build-push-action/issues/676
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD:-admin}
      KEYCLOAK_IMPORT: /opt/labelflow-realm.json
    volumes:
      - "./docker-compose.dev.realm.json:/opt/labelflow-realm.json:ro"

  keycloak_init:
    image: jboss/keycloak:16.1.1
    restart: on-failure
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER:-admin}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD:-admin}
    volumes:
      - "./docker-compose.kcadm.sh:/tmp/create-labelflow-user.sh:ro"
    entrypoint: "/bin/bash"
    command: /tmp/create-labelflow-user.sh
    depends_on: [keycloak]

volumes:
  db: {external: false}
  minio: {external: false}
