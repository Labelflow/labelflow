import {MigrationInterface, QueryRunner} from "typeorm";

export class NestJSBackend1646057293141 implements MigrationInterface {
    name = 'NestJSBackend1646057293141'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "LabelClass" DROP CONSTRAINT "LabelClass_datasetId_fkey"`);
        await queryRunner.query(`ALTER TABLE "Label" DROP CONSTRAINT "Label_labelClassId_fkey"`);
        await queryRunner.query(`ALTER TABLE "Label" DROP CONSTRAINT "Label_imageId_fkey"`);
        await queryRunner.query(`ALTER TABLE "Image" DROP CONSTRAINT "Image_datasetId_fkey"`);
        await queryRunner.query(`ALTER TABLE "Membership" DROP CONSTRAINT "Membership_workspaceSlug_fkey"`);
        await queryRunner.query(`ALTER TABLE "Membership" DROP CONSTRAINT "Membership_userId_fkey"`);
        await queryRunner.query(`ALTER TABLE "Dataset" DROP CONSTRAINT "Dataset_workspaceSlug_fkey"`);
        await queryRunner.query(`DROP INDEX "public"."LabelClass.datasetId_createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."LabelClass.datasetId_name_index"`);
        await queryRunner.query(`DROP INDEX "public"."Label.labelClassId_index"`);
        await queryRunner.query(`DROP INDEX "public"."Label.imageId_createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."Image.datasetId_createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."User.email_unique"`);
        await queryRunner.query(`DROP INDEX "public"."User.createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."Membership.workspaceSlug_userId_unique"`);
        await queryRunner.query(`DROP INDEX "public"."Membership.workspaceSlug_invitationEmailSentTo_unique"`);
        await queryRunner.query(`DROP INDEX "public"."Membership.workspaceSlug_createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."Workspace.name_unique"`);
        await queryRunner.query(`DROP INDEX "public"."Workspace.slug_unique"`);
        await queryRunner.query(`DROP INDEX "public"."Workspace.slug_deletedAt_createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."Workspace.createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."Workspace.name_index"`);
        await queryRunner.query(`DROP INDEX "public"."slugs"`);
        await queryRunner.query(`DROP INDEX "public"."workspaceSlugAndDatasetName"`);
        await queryRunner.query(`DROP INDEX "public"."Dataset.workspaceSlug_createdAt_index"`);
        await queryRunner.query(`DROP INDEX "public"."Dataset.createdAt_index"`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TYPE "public"."LabelType" RENAME TO "LabelType_old"`);
        await queryRunner.query(`CREATE TYPE "public"."Label_type_enum" AS ENUM('Classification', 'Polygon', 'Box')`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "type" TYPE "public"."Label_type_enum" USING "type"::"text"::"public"."Label_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."LabelType_old"`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "updatedAt" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "emailVerified" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "declinedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TYPE "public"."UserRole" RENAME TO "UserRole_old"`);
        await queryRunner.query(`CREATE TYPE "public"."Membership_role_enum" AS ENUM('Owner', 'Admin', 'Member')`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "role" TYPE "public"."Membership_role_enum" USING "role"::"text"::"public"."Membership_role_enum"`);
        await queryRunner.query(`DROP TYPE "public"."UserRole_old"`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "deletedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TYPE "public"."WorkspacePlan" RENAME TO "WorkspacePlan_old"`);
        await queryRunner.query(`CREATE TYPE "public"."Workspace_plan_enum" AS ENUM('Community', 'Starter', 'Pro', 'Enterprise')`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "plan" TYPE "public"."Workspace_plan_enum" USING "plan"::"text"::"public"."Workspace_plan_enum"`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "plan" SET DEFAULT 'Pro'`);
        await queryRunner.query(`DROP TYPE "public"."WorkspacePlan_old"`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "plan" SET DEFAULT 'Pro'`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "id" SET DEFAULT uuid_generate_v4()`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "createdAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "createdAt" SET DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "updatedAt" TYPE TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "updatedAt" SET DEFAULT now()`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_ac54f6ba77911904e57bcb6ecb" ON "LabelClass" ("datasetId", "name") `);
        await queryRunner.query(`CREATE INDEX "IDX_f2a3e12c1fe180363cb7dfe99e" ON "LabelClass" ("datasetId", "createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_f34fd0665825bd7e355aa84836" ON "Label" ("imageId", "createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_92f3e87b6bb5da0b2cd56eaf56" ON "Label" ("labelClassId") `);
        await queryRunner.query(`CREATE INDEX "IDX_4d535e5b27b73a1d40dd745a02" ON "Image" ("datasetId", "createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_44d12a3355d90f16aa83daa35d" ON "User" ("createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_4a257d2c9837248d70640b3e36" ON "User" ("email") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_0abf4c7e7c059ad9c1aa3cbb74" ON "Membership" ("workspaceSlug", "invitationEmailSentTo") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_d218195c9ff6b0f5cf3a5e7a08" ON "Membership" ("workspaceSlug", "createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_7ceb4e446ecbf9742aa77fe3f5" ON "Membership" ("workspaceSlug", "userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_91e0d50ad5c8cc460bbef46be2" ON "Workspace" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "IDX_d353c274d353cd52419dcfe67b" ON "Workspace" ("slug", "deletedAt", "createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_cc93e48fe37d43eee8843f1b35" ON "Workspace" ("slug") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_94b1d4a150c65c4dea73855e85" ON "Workspace" ("name") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_8c8a29b136ba542fae6c3b2725" ON "Dataset" ("createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_c45f49db7347153782372c403b" ON "Dataset" ("workspaceSlug", "createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_9851e9e834f293af7481b55839" ON "Dataset" ("workspaceSlug", "name") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_7979d044ab4503a49b9c60f2f4" ON "Dataset" ("workspaceSlug", "slug") `);
        await queryRunner.query(`ALTER TABLE "LabelClass" ADD CONSTRAINT "FK_b269e1341e082621d1bdfe3e9d7" FOREIGN KEY ("datasetId") REFERENCES "Dataset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Label" ADD CONSTRAINT "FK_450217c590da97a9f363e886be0" FOREIGN KEY ("imageId") REFERENCES "Image"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Label" ADD CONSTRAINT "FK_92f3e87b6bb5da0b2cd56eaf564" FOREIGN KEY ("labelClassId") REFERENCES "LabelClass"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Image" ADD CONSTRAINT "FK_683218b0b039e871acb63256b35" FOREIGN KEY ("datasetId") REFERENCES "Dataset"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Membership" ADD CONSTRAINT "FK_4558908c63d91e4d3bc1d01d45b" FOREIGN KEY ("workspaceSlug") REFERENCES "Workspace"("slug") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Membership" ADD CONSTRAINT "FK_072997fc30e9e070e6f6f9d231d" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "Dataset" ADD CONSTRAINT "FK_93184d0ea93435e5fa3f556211a" FOREIGN KEY ("workspaceSlug") REFERENCES "Workspace"("slug") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "Dataset" DROP CONSTRAINT "FK_93184d0ea93435e5fa3f556211a"`);
        await queryRunner.query(`ALTER TABLE "Membership" DROP CONSTRAINT "FK_072997fc30e9e070e6f6f9d231d"`);
        await queryRunner.query(`ALTER TABLE "Membership" DROP CONSTRAINT "FK_4558908c63d91e4d3bc1d01d45b"`);
        await queryRunner.query(`ALTER TABLE "Image" DROP CONSTRAINT "FK_683218b0b039e871acb63256b35"`);
        await queryRunner.query(`ALTER TABLE "Label" DROP CONSTRAINT "FK_92f3e87b6bb5da0b2cd56eaf564"`);
        await queryRunner.query(`ALTER TABLE "Label" DROP CONSTRAINT "FK_450217c590da97a9f363e886be0"`);
        await queryRunner.query(`ALTER TABLE "LabelClass" DROP CONSTRAINT "FK_b269e1341e082621d1bdfe3e9d7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7979d044ab4503a49b9c60f2f4"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9851e9e834f293af7481b55839"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c45f49db7347153782372c403b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8c8a29b136ba542fae6c3b2725"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_94b1d4a150c65c4dea73855e85"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cc93e48fe37d43eee8843f1b35"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d353c274d353cd52419dcfe67b"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_91e0d50ad5c8cc460bbef46be2"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7ceb4e446ecbf9742aa77fe3f5"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d218195c9ff6b0f5cf3a5e7a08"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0abf4c7e7c059ad9c1aa3cbb74"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4a257d2c9837248d70640b3e36"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_44d12a3355d90f16aa83daa35d"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4d535e5b27b73a1d40dd745a02"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_92f3e87b6bb5da0b2cd56eaf56"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f34fd0665825bd7e355aa84836"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f2a3e12c1fe180363cb7dfe99e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_ac54f6ba77911904e57bcb6ecb"`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Dataset" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "plan" DROP DEFAULT`);
        await queryRunner.query(`CREATE TYPE "public"."WorkspacePlan_old" AS ENUM('Community', 'Starter', 'Pro', 'Enterprise')`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "plan" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "plan" TYPE "public"."WorkspacePlan_old" USING "plan"::"text"::"public"."WorkspacePlan_old"`);
        await queryRunner.query(`DROP TYPE "public"."Workspace_plan_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."WorkspacePlan_old" RENAME TO "WorkspacePlan"`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "deletedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Workspace" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`CREATE TYPE "public"."UserRole_old" AS ENUM('Owner', 'Admin', 'Member')`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "role" TYPE "public"."UserRole_old" USING "role"::"text"::"public"."UserRole_old"`);
        await queryRunner.query(`DROP TYPE "public"."Membership_role_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."UserRole_old" RENAME TO "UserRole"`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "declinedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Membership" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "emailVerified" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "User" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Image" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "updatedAt" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`CREATE TYPE "public"."LabelType_old" AS ENUM('Classification', 'Polygon', 'Box')`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "type" TYPE "public"."LabelType_old" USING "type"::"text"::"public"."LabelType_old"`);
        await queryRunner.query(`DROP TYPE "public"."Label_type_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."LabelType_old" RENAME TO "LabelType"`);
        await queryRunner.query(`ALTER TABLE "Label" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "updatedAt" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "updatedAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "createdAt" SET DEFAULT CURRENT_TIMESTAMP`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "createdAt" TYPE TIMESTAMP(3)`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ALTER COLUMN "id" DROP DEFAULT`);
        await queryRunner.query(`CREATE INDEX "Dataset.createdAt_index" ON "Dataset" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "Dataset.workspaceSlug_createdAt_index" ON "Dataset" ("createdAt", "workspaceSlug") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "workspaceSlugAndDatasetName" ON "Dataset" ("name", "workspaceSlug") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "slugs" ON "Dataset" ("slug", "workspaceSlug") `);
        await queryRunner.query(`CREATE INDEX "Workspace.name_index" ON "Workspace" ("name") `);
        await queryRunner.query(`CREATE INDEX "Workspace.createdAt_index" ON "Workspace" ("createdAt") `);
        await queryRunner.query(`CREATE INDEX "Workspace.slug_deletedAt_createdAt_index" ON "Workspace" ("createdAt", "slug", "deletedAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "Workspace.slug_unique" ON "Workspace" ("slug") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "Workspace.name_unique" ON "Workspace" ("name") `);
        await queryRunner.query(`CREATE INDEX "Membership.workspaceSlug_createdAt_index" ON "Membership" ("createdAt", "workspaceSlug") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "Membership.workspaceSlug_invitationEmailSentTo_unique" ON "Membership" ("workspaceSlug", "invitationEmailSentTo") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "Membership.workspaceSlug_userId_unique" ON "Membership" ("workspaceSlug", "userId") `);
        await queryRunner.query(`CREATE INDEX "User.createdAt_index" ON "User" ("createdAt") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "User.email_unique" ON "User" ("email") `);
        await queryRunner.query(`CREATE INDEX "Image.datasetId_createdAt_index" ON "Image" ("createdAt", "datasetId") `);
        await queryRunner.query(`CREATE INDEX "Label.imageId_createdAt_index" ON "Label" ("createdAt", "imageId") `);
        await queryRunner.query(`CREATE INDEX "Label.labelClassId_index" ON "Label" ("labelClassId") `);
        await queryRunner.query(`CREATE INDEX "LabelClass.datasetId_name_index" ON "LabelClass" ("name", "datasetId") `);
        await queryRunner.query(`CREATE INDEX "LabelClass.datasetId_createdAt_index" ON "LabelClass" ("createdAt", "datasetId") `);
        await queryRunner.query(`ALTER TABLE "Dataset" ADD CONSTRAINT "Dataset_workspaceSlug_fkey" FOREIGN KEY ("workspaceSlug") REFERENCES "Workspace"("slug") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "Membership" ADD CONSTRAINT "Membership_userId_fkey" FOREIGN KEY ("userId") REFERENCES "User"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "Membership" ADD CONSTRAINT "Membership_workspaceSlug_fkey" FOREIGN KEY ("workspaceSlug") REFERENCES "Workspace"("slug") ON DELETE RESTRICT ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "Image" ADD CONSTRAINT "Image_datasetId_fkey" FOREIGN KEY ("datasetId") REFERENCES "Dataset"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "Label" ADD CONSTRAINT "Label_imageId_fkey" FOREIGN KEY ("imageId") REFERENCES "Image"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "Label" ADD CONSTRAINT "Label_labelClassId_fkey" FOREIGN KEY ("labelClassId") REFERENCES "LabelClass"("id") ON DELETE SET NULL ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "LabelClass" ADD CONSTRAINT "LabelClass_datasetId_fkey" FOREIGN KEY ("datasetId") REFERENCES "Dataset"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

}
